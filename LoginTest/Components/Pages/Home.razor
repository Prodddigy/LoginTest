@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

@rendermode InteractiveServer

@inject AuthenticationStateProvider auth

@inject NavigationManager navi






<PageTitle>Home</PageTitle>

<Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState>

<Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
<Authorized>
			<a href="/logout">Logout</a>Hello @Name !!! You are logged in!!!

	Press here to logout ->
</Authorized>
	

		<NotAuthorized>

			Press here to go to the : <a href="/login">Login</a> page !

		</NotAuthorized>



</Microsoft.AspNetCore.Components.Authorization.AuthorizeView>


</Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState>


<h1>Hello, world!</h1>

Welcome to your new app.






@code {

	public string Name { get; set; }



	protected async override Task OnInitializedAsync()
	{
		
		var state = await auth.GetAuthenticationStateAsync();

		var Name1 = state.User;

		if(Name1.Identity.IsAuthenticated)
		{
			Name =  Name1.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Name)?.Value;
		}
	}

}
