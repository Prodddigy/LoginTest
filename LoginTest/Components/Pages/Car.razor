@page "/car"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
<h3>car</h3>

@rendermode InteractiveServer

@inject AuthenticationStateProvider auth

<Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState>

<Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
<Authorized>
            Hello @Name !!! You are logged in!!!
<MudCarousel Class="mud-width-full" Style="height:200px;" ShowArrows="@arrows" ShowBullets="@bullets" EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle" TData="object">
    <MudCarouselItem Transition="transition" Color="@Color.Primary">
        <div class="d-flex" style="height:100%">
            <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Size="@Size.Large" />
        </div>
    </MudCarouselItem>
    <MudCarouselItem Transition="transition" Color="@Color.Secondary">
        <div class="d-flex" style="height:100%">
            <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Size="@Size.Large" />
        </div>
    </MudCarouselItem>
    <MudCarouselItem Transition="transition">
        <div class="d-flex" style="height:100%">
            <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Color="@Color.Primary" Size="@Size.Large" />
        </div>
    </MudCarouselItem>
</MudCarousel>
<MudSelect @bind-Value="transition" Label="Transition" Class="ma-2">
    <MudSelectItem Value="@Transition.Fade">Fade</MudSelectItem>
    <MudSelectItem Value="@Transition.Slide">Slide</MudSelectItem>
    <MudSelectItem Value="@Transition.None">None</MudSelectItem>
</MudSelect>
<MudSwitch @bind-Value="arrows" Color="Color.Primary">Show Arrows</MudSwitch>
<MudSwitch @bind-Value="bullets" Color="Color.Primary">Show Bullets</MudSwitch>
<MudSwitch @bind-Value="enableSwipeGesture" Color="Color.Primary">Enable Swipe Gesture</MudSwitch>
<MudSwitch @bind-Value="autocycle" Color="Color.Primary">Auto Cycle (Default: 5 secs)</MudSwitch>
        </Authorized>
    </Microsoft.AspNetCore.Components.Authorization.AuthorizeView>


</Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState>


@code {

    private bool arrows = true;
    private bool bullets = true;
    private bool enableSwipeGesture = true;
    private bool autocycle = true;
    private Transition transition = Transition.Slide;

    public string Name { get; set; }

    protected async override Task OnInitializedAsync()
    {

        var state = await auth.GetAuthenticationStateAsync();

        var Name1 = state.User;

        if (Name1.Identity.IsAuthenticated)
        {
            Name = Name1.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Name)?.Value;
        }
    }


}
